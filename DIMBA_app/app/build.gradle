apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
//        applicationId RELEASE_KEY_PASSWORD
        applicationId "ch.zhaw.securitylab.DIMBA"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFile 'app/proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFile 'app/proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path file('src/main/jni/CMakeLists.txt')
        }
    }
    sourceSets {
        main {
            jni.srcDirs = []
            res.srcDirs =
                    [
                            'src/main/res/layouts/payment/',
                            'src/main/res/layouts/investment/',
                            'src/main/res/layouts/stock/',
                            'src/main/res/layouts/auth/',
                            'src/main/res/layouts/unauth/',
                            'src/main/res/layouts/other/',
                            'src/main/res/layouts/',
                            'src/main/res/',
                    ]
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "DIMBA.apk"
        }
    }
    lintOptions {
        //checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13'
    implementation 'com.android.volley:volley:1.1.0'
    implementation 'com.auth0.android:jwtdecode:1.1.1'
    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    // alternatively, just ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
    // alternatively, just LiveData
    implementation 'androidx.lifecycle:lifecycle-livedata:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
    implementation 'androidx.room:room-runtime:2.2.5'
    annotationProcessor 'androidx.room:room-compiler:2.2.5'
    implementation 'net.zetetic:android-database-sqlcipher:4.3.0@aar'
    implementation 'androidx.sqlite:sqlite:2.1.0'
    implementation 'com.squareup.okhttp3:okhttp:4.8.1'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.0'
    implementation 'commons-codec:commons-codec:20041127.091804'
    // Paging
    implementation 'androidx.paging:paging-runtime:2.1.2'
    // Test helpers for LiveData
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    // Test helpers for Room
    testImplementation 'androidx.room:room-testing:2.2.5'
}
